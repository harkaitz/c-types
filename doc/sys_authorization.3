.\" Automatically generated by Pandoc 2.1.1
.\"
.TH "sys_authorization" "3" "" "" ""
.hy
.SH SYS\-AUTHORIZATION
.PP
struct authorization_s, authorization_close(), authorization_open(),
authorization_open_pam(), authorization_get_username()
.SH SYNOPSIS
.nf
\f[C]
#include\ <sys/authorization.h>

void\ \ \ \ \ \ \ \ authorization_close\ \ \ \ \ \ \ \ (void);
bool\ \ \ \ \ \ \ \ authorization_open\ \ \ \ \ \ \ \ \ (const\ char\ _username[]);
bool\ \ \ \ \ \ \ \ authorization_open_pam\ \ \ \ \ (pam_handle_t\ *_pam);

const\ char\ *authorization_get_username\ (void);
\f[]
.fi
.SH DESCRIPTION
.PP
With functions \f[I]authorization_open\f[] and
\f[I]authorization_open_pam\f[] authorize a \f[I]thread\f[] to work as
\f[I]user\f[].
The thread can check for authorization with
\f[I]authorization_get_username\f[].
.PP
For \f[I]authentication\f[] (which is completetly different to
\f[I]authorization\f[]) check out \f[I]pam_authenticate(3)\f[].
.SH RETURN VALUE
.PP
All return true for success false on failure.
\f[I]authorization_get_username\f[] returns NULL when no authorization
was set by any open.
.SH COLLABORATING
.PP
For making bug reports, feature requests and donations visit one of the
following links:
.IP "1." 3
<gemini://harkadev.com/oss/>
.IP "2." 3
<https://harkadev.com/oss/>
.SH SEE ALSO
.PP
\f[B]PAM_START(3)\f[], \f[B]PAM_AUTHENTICATE(3)\f[],
\f[B]PAM_GET_USER(3)\f[]
